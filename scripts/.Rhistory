grepl("2$",labelid_viallabel) ~ '2')) %>%
bind_rows()
countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2'))
countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE)
l <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel)
r1_v <- l[[1]] %>% unlist() %>% as.character() %>% sort()
r2_v <- l[[2]] %>% unlist() %>% as.character() %>% sort()
r1_v
l <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid)
r1_v <- l[[1]] %>% unlist() %>% as.character() %>% sort()
r2_v <- l[[2]] %>% unlist() %>% as.character() %>% sort()
r1_v == r2_v
countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(mutate, labelid = str_split(labelid_viallabel, pattern = '_') %>% unlist() %>% head(n=1)) %>%
map(select, labelid)
countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE))
?gsub
countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
mutate(D=gsub("\\..*","",A))
countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
map(mutate, labelid = gsub(pattern = "_*", replacement = '', labelid_viallabel))
countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
map(mutate, labelid = gsub(pattern = "_//*", replacement = '', labelid_viallabel))
countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
map(mutate, labelid = gsub(pattern = "_..*", replacement = '', labelid_viallabel))
l <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
map(mutate, labelid = gsub(pattern = "_..*", replacement = '', labelid_viallabel)) %>%
map(select, -labelid_viallabel) %>%
map(select, labelid)
r1_v <- l[[1]] %>% unlist() %>% as.character() %>% sort()
r2_v <- l[[2]] %>% unlist() %>% as.character() %>% sort()
r1_v == r2_v
l <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
map(mutate, labelid = gsub(pattern = "_..*", replacement = '', labelid_viallabel)) %>%
map(select, -labelid_viallabel) %>%
purrr::reduce(left_join, by = c("labelid","METABOLITE_NAME"))
l
# Subset the data for sites to compare (scatterplots)
###################################################
norm_join_df <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
map(mutate, labelid = gsub(pattern = "_..*", replacement = '', labelid_viallabel)) %>%
map(select, -labelid_viallabel) %>%
purrr::reduce(left_join, by = c("labelid","METABOLITE_NAME"))
# Plot scatter plots
################################################################################
norm_join_df %>%
ggplot(aes(x = REP_1, y = REP_2), color = ) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", size = 1) +
geom_abline(linetype="dashed") +
facet_wrap(~ METABOLITE_NAME) +
expand_limits(x = 0, y = 0) +
coord_fixed(ratio=1)
# Assign Variables
################################################################################
tissue <- 'liver'
named <- 'named'
study_institute_metab_family <- 'Mayo Clinic_ac'
# Collect the metabolites unique to run
metabolites <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(METABOLITE_DATA) %>%
select(refmet_name) %>% unlist() %>% as.character() %>% unique()
# Subset Data
################################################################################
# Collect the samples (remove QCs) & join sample order
sample_join <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(SAMPLE_DATA) %>%
filter(sample_type == 'Sample') %>%
select(sample_id, sample_order)
# Collect abundances in long format and annotate replicate labelids
plot_df <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
left_join(y = sample_join, by = c("viallabel" = "sample_id")) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ '1',
grepl("2$",labelid_viallabel) ~ '2'))
# Plot Boxplots faceted by shared metabolites
################################################################################
plot_df %>%
ggplot(aes(y = METABOLITE_NAME, x = VALUE, color = REPLICATE)) +
geom_boxplot(alpha = 0.8) +
labs(title="Box Plots of Metabolite Abundances",
x = "Abundance", y = "")
# Plot the density plot for all the gene counts
################################################################################
plot_df %>%
ggplot(aes(x = VALUE, color = REPLICATE)) +
geom_density() +
labs(title="Density Plot of Targeted Metabolite Abundances",
x = "Abundance",
y = "Density")
# Summary Statistics of Density plot distribution
################################################################################
# Iterate through the runs and collect vectors
df_all <- data.frame()
for(rep in c('1','2')){
# Collect numeric vector
num_vec <- plot_df %>%
filter(REPLICATE == rep) %>%
select(VALUE) %>% unlist() %>% unname()
df <- NumericSummaryStats(num_vec)
row.names(df) <- rep
df_all <- rbind(df_all, df)
}
df_all
# Subset the data for sites to compare (scatterplots)
###################################################
plot_join_df <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
select(REPLICATE,METABOLITE_NAME,labelid,VALUE) %>%
mutate(REPLICATE = as.character(REPLICATE)) %>%
split(.$REPLICATE) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
purrr::reduce(left_join, by = c("labelid","METABOLITE_NAME"))
# Plot scatter plots
################################################################################
plot_join_df %>%
ggplot(aes(x = REP_1, y = REP_2), color = ) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", size = 1) +
geom_abline(linetype="dashed") +
facet_wrap(~ METABOLITE_NAME) +
expand_limits(x = 0, y = 0) +
coord_fixed(ratio=1)
# Plot scatter plots ordered by sample (include R2 values)
lm_df <- plot_join_df %>%
rename(name = METABOLITE_NAME) %>%
rename(x = REP_1) %>%
rename(y = REP_2)
# Iterate through each of the shared metabolites to collect summary info about their correlations
r2_df <- data.frame()
for(metab in metabolites){
met_df <- lm_df %>%
filter(name == metab)
r2_df <- rbind(r2_df, lm_eqn(met_df))
}
# Display summaries
r2_df %>%
arrange(METABOLITE)
r2_df %>%
arrange(desc(R2)) %>%
select(METABOLITE,R2)
# Normalize
# Note in this step, we use labelid to account for mayo's duplicate samples
################################################################################
norm_df <- plot_df %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
split(split_on) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ '1',
grepl("2$",labelid_viallabel) ~ '2')) %>%
bind_rows()
# Plot Boxplots faceted by shared metabolites
################################################################################
norm_df %>%
ggplot(aes(y = METABOLITE_NAME, x = VALUE, color = REPLICATE)) +
geom_boxplot(alpha = 0.8) +
labs(title="Box Plots of Metabolite Abundances",
x = "Abundance", y = "")
# Normalize
# Subset the data for sites to compare (scatterplots)
###################################################
norm_join_df <- countdata_df %>%
ungroup() %>%
unite(STUDY_INSTITUTE,METAB_FAMILY, col = "STUDY_INSTITUTE_METAB_FAMILY") %>%
filter(TISSUE == tissue) %>%
filter(NAMED == named) %>%
filter(STUDY_INSTITUTE_METAB_FAMILY == study_institute_metab_family) %>%
unnest(COUNT_DATA) %>%
filter(viallabel %in% as.character(unlist(sample_join$sample_id))) %>%
unite(labelid, viallabel, col = "labelid_viallabel", remove = F) %>%
mutate(REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
split(.$REPLICATE) %>%
map(select, labelid_viallabel, METABOLITE_NAME, VALUE) %>%
map(pivot_wider, names_from = METABOLITE_NAME, values_from = VALUE) %>%
map(column_to_rownames, var = "labelid_viallabel") %>%
map(as.matrix) %>%
map(AutoScaleMatrix) %>%
map(as.data.frame) %>%
map(rownames_to_column, var = "labelid_viallabel") %>%
map(pivot_longer, names_to = 'METABOLITE_NAME', values_to = 'VALUE', cols = all_of(metabolites)) %>%
map(mutate, REPLICATE = case_when(grepl("1$",labelid_viallabel) ~ 'REP_1',
grepl("2$",labelid_viallabel) ~ 'REP_2')) %>%
map(~rename(., !!sym(unique(.$REPLICATE)) := "VALUE")) %>%
map(~select(., -REPLICATE)) %>%
map(mutate, labelid = gsub(pattern = "_..*", replacement = '', labelid_viallabel)) %>%
map(select, -labelid_viallabel) %>%
purrr::reduce(left_join, by = c("labelid","METABOLITE_NAME"))
# Plot scatter plots
################################################################################
norm_join_df %>%
ggplot(aes(x = REP_1, y = REP_2), color = ) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", size = 1) +
geom_abline(linetype="dashed") +
facet_wrap(~ METABOLITE_NAME) +
expand_limits(x = 0, y = 0) +
coord_fixed(ratio=1)
# Plot scatter plots ordered by sample (include R2 values)
lm_df <- norm_join_df %>%
rename(name = METABOLITE_NAME) %>%
rename(x = REP_1) %>%
rename(y = REP_2)
# Iterate through each of the shared metabolites to collect summary info about their correlations
r2_df <- data.frame()
for(metab in metabolites){
met_df <- lm_df %>%
filter(name == metab)
r2_df <- rbind(r2_df, lm_eqn(met_df))
}
# Display summaries
r2_df %>%
arrange(METABOLITE)
r2_df %>%
arrange(desc(R2)) %>%
select(METABOLITE,R2)
# Plot the density plot for all the gene counts
################################################################################
norm_df %>%
ggplot(aes(x = VALUE, color = REPLICATE)) +
geom_density() +
labs(title="Density Plot of Targeted Metabolite Abundances",
x = "Abundance",
y = "Density")
# Summary Statistics of Density plot distribution
################################################################################
# Iterate through the runs and collect vectors
df_all <- data.frame()
for(rep in c('1','2')){
# Collect numeric vector
num_vec <- norm_df %>%
filter(REPLICATE == rep) %>%
select(VALUE) %>% unlist() %>% unname()
df <- NumericSummaryStats(num_vec)
row.names(df) <- rep
df_all <- rbind(df_all, df)
}
df_all
